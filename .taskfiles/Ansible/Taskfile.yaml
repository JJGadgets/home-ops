---
version: "3"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"

tasks:

  deps:
    desc: Set up Ansible dependencies for the environment
    cmds:
      - task: .venv

  run:
    desc: Run an Ansible playbook for configuring a cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        playbook: Playbook to run (required)
    prompt: Run Ansible playbook '{{.playbook}}' against the '{{.cluster}}' cluster... continue?
    deps: ["deps"]
    cmd: |
      .venv/bin/ansible-playbook \
        --inventory {{.ANSIBLE_DIR}}/{{.cluster}}/inventory/hosts.yaml \
        {{.ANSIBLE_DIR}}/{{.cluster}}/playbooks/{{.playbook}}.yaml {{.CLI_ARGS}}
    vars:
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'
      playbook: '{{ or .playbook (fail "Argument (playbook) is required") }}'
    preconditions:
      - { msg: "Venv not found",      sh: "test -d {{.ROOT_DIR}}/.venv" }
      - { msg: "Inventory not found", sh: "test -f {{.ANSIBLE_DIR}}/{{.cluster}}/inventory/hosts.yaml" }
      - { msg: "Playbook not found",  sh: "test -f {{.ANSIBLE_DIR}}/{{.cluster}}/playbooks/{{.playbook}}.yaml" }

  .venv:
    internal: true
    cmds:
      - true && {{.PYTHON_BIN}} -m venv {{.ROOT_DIR}}/.venv
      - .venv/bin/python3 -m pip install --upgrade pip setuptools wheel
      - .venv/bin/python3 -m pip install --upgrade --requirement {{.ANSIBLE_DIR}}/requirements.txt
      - .venv/bin/ansible-galaxy install --role-file "{{.ANSIBLE_DIR}}/requirements.yaml" --force
    sources:
      - "{{.ANSIBLE_DIR}}/requirements.txt"
      - "{{.ANSIBLE_DIR}}/requirements.yaml"
    generates:
      - "{{.ROOT_DIR}}/.venv/pyvenv.cfg"
