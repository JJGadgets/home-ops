---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 6.58.4
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
    - name: ingress-nginx
      namespace: networking
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:14.8
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    replicas: 2
    podAnnotations:
      reloader.stakater.com/auto: "true"
    envFromSecrets:
      - name: grafana-secret
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_LOG_FILTERS: rendering:debug
      GF_PANELS_DISABLE_SANITIZE_HTML: true
    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        signout_redirect_url: https://authentik.${SECRET_DOMAIN}/application/o/grafana-provider/end-session/
        oauth_auto_login: false
        oauth_allow_insecure_email_lookup: true
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Viewer
        hide_version: true
      auth.generic_oauth:
        name: authentik
        enabled: true
        client_id: # Set by env vars secret
        client_secret: # Set by env vars secret
        scopes: openid email profile
        auth_url: https://authentik.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://authentik.${SECRET_DOMAIN}/application/o/token/
        api_url: https://authentik.${SECRET_DOMAIN}/application/o/userinfo/
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
    deploymentStrategy:
      type: RollingUpdate
    resources:
      limits:
        memory: 219M
      requests:
        cpu: 23m
        memory: 127M
    admin:
      existingSecret: grafana-secret
      passwordKey: adminPass
      userKey: adminUser
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: "cilium"
            orgId: 1
            folder: "Cilium"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: "data"
            orgId: 1
            folder: "Data"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "system"
            orgId: 1
            folder: "System"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          - name: "thanos"
            orgId: 1
            folder: "Thanos"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: "unifi"
            orgId: 1
            folder: "Unifi"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: false
            name: prom_direct
            type: prometheus
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
          - name: Prometheus
            isDefault: true
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.0-rc.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.0-rc.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.0-rc.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
        hubble-metrics:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.0-rc.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/hubble-l7-http-metrics-by-workload.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        kubernetes-pod-storage:
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      system:
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/16541
        speedtest-exporter-hub:
          gnetId: 16541
          revision: 1
          datasource:
            - name: datasource
              value: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/13502
        # minio:
        #   gnetId: 13502
        #   revision: 19
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860
        node-exporter-full:
          gnetId: 1860
          revision: 31
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        zfs:
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      unifi:
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 8
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
      nodeSelector:
        kubernetes.io/arch: amd64 ## Does not have an ARM image
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/icon: grafana.png
        gethomepage.dev/name: Grafana
        gethomepage.dev/group: Monitoring
        gethomepage.dev/widget.type: grafana
        gethomepage.dev/widget.url: http://grafana.monitoring.svc.cluster.local
        gethomepage.dev/widget.username: "'{{HOMEPAGE_VAR_GRAFANA_USERNAME}}'"
        gethomepage.dev/widget.password: "'{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}'"
        external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
      hosts:
        - &host grafana.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
