---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portainer
  namespace: default
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: Portainer
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-signin: https://portainer.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$request_uri
    nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-proxy-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: |
      10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
    hajimari.io/icon: mdi:monitor-dashboard
    hajimari.io/group: infrastructure
spec:
  ingressClassName: nginx
  rules:
    - host: &host portainer.${SECRET_DOMAIN}
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: portainer
                port:
                  number: 9000
  tls:
    - hosts:
        - *host
---
apiVersion: v1
kind: Endpoints
metadata:
  name: portainer
  namespace: default
subsets:
  - addresses:
      - ip: 192.168.1.100
    ports:
      - name: http
        port: 9000
        protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: portainer
  namespace: default
spec:
  ports:
    - name: http
      port: 9000
  type: ClusterIP
