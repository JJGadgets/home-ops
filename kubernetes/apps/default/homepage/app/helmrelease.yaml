---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app homepage
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: homepage
      version: 1.1.1
      sourceRef:
        kind: HelmRepository
        name: jameswynn
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      strategy: RollingUpdate
    global:
      nameOverride: *app
      annotations:
        reloader.stakater.com/search: "true"
    image:
      repository: ghcr.io/benphelps/homepage
      tag: v0.6.10
    serviceAccount:
      create: true
    env:
      TZ: ${TZ}
      LOG_LEVEL: debug
      THEME: dark
    enableRbac: true
    config:
      layout:
        Downloads:
          style: row
          columns: 4
      kubernetes:
        mode: cluster
      widgets:
        - resources:
            backend: kubernetes
            expanded: true
            cpu: true
            memory: true
        - search:
            provider: duckduckgo
            target: _blank
        - kubernetes:
            cluster:
              show: true
              cpu: true
              memory: true
              showLabel: true
              label: "cluster"
            nodes:
              show: true
              cpu: true
              memory: true
              showLabel: true
      bookmarks:
        - Communitcate:
            - Discord:
                - href: 'https://discord.com/app'
            - Gmail:
                - href: 'http://gmail.com'
            - Google Calendar:
                - href: 'https://calendar.google.com'
            - Outlook:
                - href: 'https://outlook.com'
        - Media:
            - YouTube:
                - href: 'https://youtube.com/feed/subscriptions'
            - Spotify:
                - href: 'http://open.spotify.com'
            - Youtube Music:
                - href: 'https://music.youtube.com'
        - Reading:
            - Beyond:
                - href: 'https://forums.beyond.ca/search.php?do=getnew&contenttype=vBForum_Post'
            - Western Subaru Club:
                - href: 'http://westernsubaruclub.com/smf/index.php?action=unread'
            - Reddit:
                - href: 'https://reddit.com'
        - Git:
            - k8s-at-home:
                - href: 'https://nanne.dev/k8s-at-home-search/'
            - k3s-home-cluster:
                - href: 'https://github.com/LilDrunkenSmurf/k3s-home-cluster'
      services:
        - Media:
            - Plex:
                href: https://app.plex.tv
                icon: plex.png
                widget:
                  type: plex
                  url: http://${NAS_IP}:32400
                  key: ${PLEX_TOKEN}
            - Tdarr:
                href: https://tdarr.${SECRET_DOMAIN}
                icon: tdarr.png
                widget:
                  type: tdarr
                  url: http://${NAS_IP}:8265
        - Infrastructure:
            - Unraid:
                href: nas.${SECRET_DOMAIN}
                icon: unraid.png
                description: Unraid WebUI
            - Unifi:
                href: https://unifi.ui.com
                icon: unifi.png
                description: Unifi Dashboard
                widget:
                  type: unifi
                  url: https://192.168.1.1:443
                  username: ${UNIFI_USERNAME}
                  password: ${UNIFI_PASSWORD}
            - PiHole:
                href: http://${PIHOLE_URL}
                icon: pihole.png
                description: Pi Hole
                widget:
                  type: pihole
                  url: http://${PIHOLE_URL}
                  key: ${PIHOLE_TOKEN}
            - Portainer:
                href: https://portainer.lildrunkensmurf.com
                icon: portainer.png
                description: Portainer Unraid
                widget:
                  type: portainer
                  url: http://${NAS_IP}:9000
                  env: 1
                  key: ${PORTAINER_TOKEN}
    service:
      main:
        ports:
          http:
            port: 3000
            targetPort: 3000
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          #nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.security.svc.cluster.local/oauth2/auth"
          #nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
        hosts:
          - host: &host "home.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    persistence:
      logs:
        enabled: true
        type: emptyDir
        mountPath: /app/config/logs
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
      limits:
        memory: 200Mi
