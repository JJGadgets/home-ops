---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app mastodon
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: mastodon
      version: 3.0.0 # Update this when mastodon publishes it's own chart
      sourceRef:
        kind: HelmRepository
        name: mastodon
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      replicas: 2
      strategy: RollingUpdate
    image:
      repository: ghcr.io/mastodon/mastodon
    mastodon:
      createAdmin:
        enabled: false
        username: ${MASTODON_USERNAME}
        email: ${MASTODON_EMAIL}
      cron:
        removeMedia:
          enabled: true
          schedule: "0 0 * * 0"
      locale: en
      local_domain: null
      web_domain: mastodon.${SECRET_DOMAIN}
      singleUserMode: false
      authorizedFetch: false
      limitedFederationMode: false
      persistence:
        assets:
          accessMode: ReadWriteOnce
          resource:
            requests:
              storage: 10Gi
        system:
          accessMode: ReadWriteOnce
          resources:
            requests:
              storage: 100Gi
    sidekiq:
      workers:
        - name: all-queues
          concurrency: 3
          replicas: 1
          queues:
            - default,8
            - push,6
            - ingress,4
            - mailers,2
            - pull
            - scheduler
    # smtp:
    #   auth_method: plain
    #   ca_file: /etc/ssl/certs/ca-certificates.crt
    #   delivery_method: smtp
    #   domain:
    #   enable_starttls: 'auto'
    #   from_address: notifications@example.com
    #   return_path:
    #   openssl_verify_mode: peer
    #   port: 587
    #   reply_to:
    #   server: smtp.mailgun.org
    #   tls: false
    #   # -- Instead of defining login/password above, you can specify the name of an existing secret here. Login and
    #   # password must be located in keys named `login` and `password` respectively.
    #   existingSecret: mastodon-smpt-secret
    streaming:
      port: 4000
      workers: 1
      base_url: null
      replicas: 1
    web:
      port: 3000
      replicas: 1
      resources: {}
      # requests:
      #   cpu: 250m
      #   memory: 768Mi
      # limits:
      #   cpu: "1"
      #   memory: 1280Mi
      # -- Puma-specific options. Below values are based on default behavior in
      # config/puma.rb when no custom values are provided.
      minThreads: "5"
      maxThreads: "5"
      workers: "2"
      persistentTimeout: "20"
    metrics:
      statsd:
        address: ""
    # Sets the PREPARED_STATEMENTS environment variable: https://docs.joinmastodon.org/admin/config/#prepared_statements
    preparedStatements: true
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          # nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.security.svc.cluster.local/oauth2/auth"
          # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
        hosts:
          - host: &host "mastodon.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    elasticsearch:
      enabled: true
    # https://github.com/bitnami/charts/tree/master/bitnami/postgresql#parameters
    postgresql:
      enabled: true
      auth:
        database: mastodon_production
        username: mastodon
        # you must set a password; the password generated by the postgresql chart will
        # be rotated on each upgrade:
        # https://github.com/bitnami/charts/tree/master/bitnami/postgresql#upgrade
        # you can also specify the name of an existing Secret
        # with a key of password set to the password you want
        existingSecret: mastodon-pg-secret
    # https://github.com/bitnami/charts/tree/master/bitnami/redis#parameters
    redis:
      enabled: true
      hostname: ""
      port: 6379
      auth:
        # you can also specify the name of an existing Secret
        # with a key of redis-password set to the password you want
        existingSecret: masstodon-redis-secret
    externalAuth:
      oauth_global:
        # -- Automatically redirect to OIDC, CAS or SAML, and don't use local account authentication when clicking on Sign-In
        omniauth_only: false
    podSecurityContext:
      runAsUser: 991
      runAsGroup: 991
      fsGroup: 991
    serviceAccount:
      create: true
      annotations: {}
    # If set to true, an annotation with the current chart release number will be added to all mastodon pods. This will
    # cause all pods to be recreated every `helm upgrade` regardless of whether their config or spec changes.
    revisionPodAnnotation: true
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
