---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-downloads
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-downloads
    app.kubernetes.io/instance: nfs-direct
  name: media-downloads
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_DOWNLOADS}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-anime
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-anime
    app.kubernetes.io/instance: nfs-direct
  name: media-anime
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_ANIME}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-books
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-books
    app.kubernetes.io/instance: nfs-direct
  name: media-books
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_BOOK}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-movies
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-movies
    app.kubernetes.io/instance: nfs-direct
  name: media-movies
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_MOVIES}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-tv
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-tv
    app.kubernetes.io/instance: nfs-direct
  name: media-tv
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_TV}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-recycle-bin
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-recycle-bin
    app.kubernetes.io/instance: nfs-direct
  name: media-recycle-bin
provisioner: nfs.csi.k8s.io
parameters:
  server: ${SECRET_NFS_SERVER}
  share: ${SECRET_NFS_RECYCLE}
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    meta.helm.sh/release-name: media-nfs
    meta.helm.sh/release-namespace: storage
  labels:
    app.kubernetes.io/name: media-nfs
    app.kubernetes.io/instance: nfs-direct
  name: media-nfs
provisioner: nfs.csi.k8s.io
reclaimPolicy: Retain
